<?php

namespace DarshPhpDev\LaravelSettings\Commands;

use Illuminate\Console\Command;
use Illuminate\Support\Facades\File;

class InstallSettingsCommand extends Command
{
    protected $signature = 'settings:install {--driver=} {--path=}';
    protected $description = 'Install the settings package';

    public function handle()
    {
        // Choose storage driver
        $driver = $this->option('driver') ?? $this->choice('Select storage driver', ['file', 'database'], 0);

        // Get configuration
        $config = [
            'driver' => $driver,
            'encrypt' => $this->confirm('Enable encryption?', false),
            'array_format' => $this->choice(
                'How should arrays be stored?',
                ['json' => 'JSON', 'csv' => 'Comma-separated', 'serialize' => 'Serialized'],
                'json'
            ),
        ];

        if ($driver === 'file') {
            $config['file'] = [
                'path' => $this->option('path') ?? $this->ask('Storage file path?', storage_path('app/settings.json')),
            ];
        } else {
            $config['database'] = [
                'table' => $this->ask('Database table name', 'settings'),
            ];
        }

        // Publish config
        File::ensureDirectoryExists(config_path());
        // File::put(
        //     config_path('settings.php'),
        //     "<?php\n\nreturn " . var_export($config, true) . ";\n"
        // );

        $this->putConfig($config);

        // Publish migrations if using database
        if ($driver === 'database') {
            $this->call('vendor:publish', [
                '--provider' => 'DarshPhpDev\LaravelSettings\SettingsServiceProvider',
                '--tag' => 'migrations'
            ]);
            $this->info('Migration published. Run php artisan migrate to create the settings table.');
        }

        $this->info('Settings package installed successfully!');
    }

    protected function putConfig($config)
    {
        File::put(
            config_path('settings.php'),
            "<?php\n\n" .
            "/**\n" .
            " * Laravel Settings Package Configuration\n" .
            " *\n" .
            " * This file is auto-generated by `php artisan settings:install`\n" .
            " *\n" .
            " * - `driver`: Defines where settings are stored (`file` or `database`)\n" .
            " * - `encrypt`: Determines if values should be encrypted\n" .
            " * - `array_format`: How arrays are stored (`json`, `csv`, or `serialize`)\n" .
            " */\n\n" .
            "return [\n" .
            "    // Storage driver: 'file' or 'database'\n" .
            "    'driver' => '" . $config['driver'] . "',\n\n" .
            "    // Enable encryption for stored values (true/false)\n" .
            "    'encrypt' => " . var_export($config['encrypt'], true) . ",\n\n" .
            "    // Format for storing arrays: 'json', 'csv', 'serialize'\n" .
            "    'array_format' => '" . $config['array_format'] . "',\n\n" .
            ($config['driver'] === 'file' ?
                "    // File storage settings\n" .
                "    'file' => [\n" .
                "        'path' => '" . addslashes($config['file']['path']) . "',\n" .
                "    ]\n"
                :
                "    // Database storage settings\n" .
                "    'database' => [\n" .
                "        'table' => '" . $config['database']['table'] . "',\n" .
                "    ]\n"
            ) .
            "];\n"
        );
    }
}